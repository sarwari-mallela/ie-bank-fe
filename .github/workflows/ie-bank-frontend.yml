name: ie-bank-frontend

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  RESOURCE_GROUP_NAME: aguadamillas_students_1


jobs:
  build-dev:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: 'Set variables based on event'
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "MODE=uat" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" = "push" ]; then
            if [ "${{ github.ref_name }}" = "main" ]; then
              echo "MODE=prod" >> $GITHUB_ENV
            else
              echo "MODE=development" >> $GITHUB_ENV
            fi
          fi

      - name: npm install, build, and test for dev
        run: |
          npm install
          npm run build -- --mode development


      - name: Upload artifact for deployment dev job
        uses: actions/upload-artifact@v3
        with:
          name: node-app-dev
          path: dist


  deploy-dev:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build-dev
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: 'Set variables based on event'
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "AZURE_WEBAPP_NAME=grp4-fe-uat" >> $GITHUB_ENV
            echo "MODE=uat" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" = "push" ]; then
            if [ "${{ github.ref_name }}" = "main" ]; then
              echo "AZURE_WEBAPP_NAME=grp4-fe-prod" >> $GITHUB_ENV
              echo "MODE=prod" >> $GITHUB_ENV
            else
              echo "AZURE_WEBAPP_NAME=grp4-fe-dev" >> $GITHUB_ENV
              echo "MODE=development" >> $GITHUB_ENV
            fi
          fi

      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app-dev

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Retrieve API Token
        id: get_api_token
        run: |
          API_TOKEN=$(az staticwebapp secrets list --name grp4-fe-dev --query "properties.apiKey" --output tsv)
          echo "API_TOKEN=$API_TOKEN" >> $GITHUB_ENV

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: 'upload'
          azure_static_web_apps_api_token: ${{ env.API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          app_location: '.'
          output_location: ''

  build-uat:
    if: github.event.pull_request.base.ref == 'main' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: 'Set variables based on event'
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "MODE=uat" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" = "push" ]; then
            if [ "${{ github.ref_name }}" = "main" ]; then
              echo "MODE=prod" >> $GITHUB_ENV
            else
              echo "MODE=development" >> $GITHUB_ENV
            fi
          fi

      - name: npm install, build, and test for dev
        run: |
          npm install
          npm run build -- --mode uat


      - name: Upload artifact for deployment dev job
        uses: actions/upload-artifact@v3
        with:
          name: node-app-uat
          path: dist


  deploy-uat:
    if: github.event.pull_request.base.ref == 'main' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-uat
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: 'Set variables based on event'
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "AZURE_WEBAPP_NAME=grp4-fe-uat" >> $GITHUB_ENV
            echo "MODE=uat" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" = "push" ]; then
            if [ "${{ github.ref_name }}" = "main" ]; then
              echo "AZURE_WEBAPP_NAME=grp4-fe-prod" >> $GITHUB_ENV
              echo "MODE=prod" >> $GITHUB_ENV
            else
              echo "AZURE_WEBAPP_NAME=grp4-fe-dev" >> $GITHUB_ENV
              echo "MODE=development" >> $GITHUB_ENV
            fi
          fi

      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app-uat

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Retrieve API Token
        id: get_api_token
        run: |
          API_TOKEN=$(az staticwebapp secrets list --name grp4-fe-uat --query "properties.apiKey" --output tsv)
          echo "API_TOKEN=$API_TOKEN" >> $GITHUB_ENV

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: 'upload'
          azure_static_web_apps_api_token: ${{ env.API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          app_location: '.'
          output_location: ''

  build-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: 'Set variables based on event'
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "MODE=uat" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" = "push" ]; then
            if [ "${{ github.ref_name }}" = "main" ]; then
              echo "MODE=prod" >> $GITHUB_ENV
            else
              echo "MODE=development" >> $GITHUB_ENV
            fi
          fi

      - name: npm install, build, and test for dev
        run: |
          npm install
          npm run build -- --mode production


      - name: Upload artifact for deployment dev job
        uses: actions/upload-artifact@v3
        with:
          name: node-app-prod
          path: dist


  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-prod
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: 'Set variables based on event'
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "AZURE_WEBAPP_NAME=grp4-fe-uat" >> $GITHUB_ENV
            echo "MODE=uat" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" = "push" ]; then
            if [ "${{ github.ref_name }}" = "main" ]; then
              echo "AZURE_WEBAPP_NAME=grp4-fe-prod" >> $GITHUB_ENV
              echo "MODE=prod" >> $GITHUB_ENV
            else
              echo "AZURE_WEBAPP_NAME=grp4-fe-dev" >> $GITHUB_ENV
              echo "MODE=development" >> $GITHUB_ENV
            fi
          fi

      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app-prod

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Retrieve API Token
        id: get_api_token
        run: |
          API_TOKEN=$(az staticwebapp secrets list --name grp4-fe-prod --query "properties.apiKey" --output tsv)
          echo "API_TOKEN=$API_TOKEN" >> $GITHUB_ENV

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: 'upload'
          azure_static_web_apps_api_token: ${{ env.API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          app_location: '.'
          output_location: ''
